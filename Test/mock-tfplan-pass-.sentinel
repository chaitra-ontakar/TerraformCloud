import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"aws_iam_role": {
				"firehose_role": {
					0: {
						"applied": {
							"assume_role_policy":    "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"firehose.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
							"description":           null,
							"force_detach_policies": false,
							"max_session_duration":  3600,
							"name":                  "firehose_test_role",
							"path":                  "/",
							"permissions_boundary":  null,
							"tags":                  null,
						},
						"destroy": false,
						"diff": {
							"arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"assume_role_policy": {
								"computed": false,
								"new":      "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"firehose.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
								"old":      "",
							},
							"create_date": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"description": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"force_detach_policies": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"inline_policy.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"managed_policy_arns.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"max_session_duration": {
								"computed": false,
								"new":      "3600",
								"old":      "",
							},
							"name": {
								"computed": false,
								"new":      "firehose_test_role",
								"old":      "",
							},
							"name_prefix": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"path": {
								"computed": false,
								"new":      "/",
								"old":      "",
							},
							"permissions_boundary": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"tags": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"tags_all.%": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"unique_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_kinesis_firehose_delivery_stream": {
				"extended_s3_stream": {
					0: {
						"applied": {
							"destination":                 "extended_s3",
							"elasticsearch_configuration": [],
							"extended_s3_configuration": [
								{
									"buffering_interval":                   300,
									"buffering_size":                       5,
									"compression_format":                   "UNCOMPRESSED",
									"data_format_conversion_configuration": [],
									"dynamic_partitioning_configuration":   [],
									"error_output_prefix":                  null,
									"kms_key_arn":                          null,
									"prefix":                               null,
									"processing_configuration":             [],
									"s3_backup_configuration":              [],
									"s3_backup_mode":                       "Disabled",
								},
							],
							"http_endpoint_configuration":  [],
							"kinesis_source_configuration": [],
							"msk_source_configuration":     [],
							"name": "aws-waf-logs-test",
							"opensearch_configuration":           [],
							"opensearchserverless_configuration": [],
							"redshift_configuration":             [],
							"server_side_encryption":             [],
							"splunk_configuration":               [],
							"tags":                               null,
							"timeouts":                           null,
						},
						"destroy": false,
						"diff": {
							"arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"destination": {
								"computed": false,
								"new":      "extended_s3",
								"old":      "",
							},
							"destination_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"elasticsearch_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"extended_s3_configuration.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"extended_s3_configuration.0.%": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"extended_s3_configuration.0.bucket_arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"extended_s3_configuration.0.buffering_interval": {
								"computed": false,
								"new":      "300",
								"old":      "",
							},
							"extended_s3_configuration.0.buffering_size": {
								"computed": false,
								"new":      "5",
								"old":      "",
							},
							"extended_s3_configuration.0.cloudwatch_logging_options": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"extended_s3_configuration.0.compression_format": {
								"computed": false,
								"new":      "UNCOMPRESSED",
								"old":      "",
							},
							"extended_s3_configuration.0.data_format_conversion_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"extended_s3_configuration.0.dynamic_partitioning_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"extended_s3_configuration.0.error_output_prefix": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"extended_s3_configuration.0.kms_key_arn": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"extended_s3_configuration.0.prefix": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"extended_s3_configuration.0.processing_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"extended_s3_configuration.0.role_arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"extended_s3_configuration.0.s3_backup_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"extended_s3_configuration.0.s3_backup_mode": {
								"computed": false,
								"new":      "Disabled",
								"old":      "",
							},
							"http_endpoint_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"kinesis_source_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"msk_source_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"name": {
								"computed": false,
								"new":      "aws-waf-logs-test",
								"old":      "",
							},
							"opensearch_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"opensearchserverless_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"redshift_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"server_side_encryption.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"splunk_configuration.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"tags": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"tags_all.%": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"version_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_s3_bucket": {
				"bucket": {
					0: {
						"applied": {
							"bucket":        "tf-test-bucket",
							"force_destroy": false,
							"tags":          null,
							"timeouts":      null,
						},
						"destroy": false,
						"diff": {
							"acceleration_status": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"acl": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"bucket": {
								"computed": false,
								"new":      "tf-test-bucket",
								"old":      "",
							},
							"bucket_domain_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"bucket_prefix": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"bucket_regional_domain_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"cors_rule.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"force_destroy": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"grant.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"hosted_zone_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"lifecycle_rule.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"logging.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"object_lock_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"object_lock_enabled": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"policy": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"region": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"replication_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"request_payer": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"server_side_encryption_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"tags": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"tags_all.%": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"versioning.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website_domain": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website_endpoint": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_s3_bucket_acl": {
				"bucket_acl": {
					0: {
						"applied": {
							"acl": "private",
							"expected_bucket_owner": null,
						},
						"destroy": false,
						"diff": {
							"access_control_policy.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"acl": {
								"computed": false,
								"new":      "private",
								"old":      "",
							},
							"bucket": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"expected_bucket_owner": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_wafv2_web_acl": {
				"webacl": {
					0: {
						"applied": {
							"association_config":   [],
							"captcha_config":       [],
							"custom_response_body": [],
							"default_action": [
								{
									"allow": [
										{
											"custom_request_handling": [],
										},
									],
									"block": [],
								},
							],
							"description":   "Example of a managed rule.",
							"name":          "managed-rule-example",
							"rule":          [],
							"scope":         "REGIONAL",
							"tags":          null,
							"token_domains": null,
							"visibility_config": [
								{
									"cloudwatch_metrics_enabled": false,
									"metric_name":                "friendly-rule-metric-name",
									"sampled_requests_enabled":   false,
								},
							],
						},
						"destroy": false,
						"diff": {
							"arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"association_config.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"capacity": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"captcha_config.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"custom_response_body.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"default_action.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"default_action.0.%": {
								"computed": false,
								"new":      "2",
								"old":      "",
							},
							"default_action.0.allow.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"default_action.0.allow.0.%": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"default_action.0.allow.0.custom_request_handling.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"default_action.0.block.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"description": {
								"computed": false,
								"new":      "Example of a managed rule.",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"lock_token": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"name": {
								"computed": false,
								"new":      "managed-rule-example",
								"old":      "",
							},
							"rule.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"scope": {
								"computed": false,
								"new":      "REGIONAL",
								"old":      "",
							},
							"tags": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"tags_all.%": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"token_domains": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"visibility_config.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"visibility_config.0.%": {
								"computed": false,
								"new":      "3",
								"old":      "",
							},
							"visibility_config.0.cloudwatch_metrics_enabled": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
							"visibility_config.0.metric_name": {
								"computed": false,
								"new":      "friendly-rule-metric-name",
								"old":      "",
							},
							"visibility_config.0.sampled_requests_enabled": {
								"computed": false,
								"new":      "false",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_wafv2_web_acl_logging_configuration": {
				"loggingconfiguration": {
					0: {
						"applied": {
							"logging_filter": [],
							"redacted_fields": [
								{
									"method":       [],
									"query_string": [],
									"single_header": [
										{
											"name": "x-auth-token",
										},
									],
									"uri_path": [],
								},
							],
						},
						"destroy": false,
						"diff": {
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"log_destination_configs.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"logging_filter.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"redacted_fields.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"redacted_fields.0.%": {
								"computed": false,
								"new":      "4",
								"old":      "",
							},
							"redacted_fields.0.method.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"redacted_fields.0.query_string.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"redacted_fields.0.single_header.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"redacted_fields.0.single_header.0.%": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"redacted_fields.0.single_header.0.name": {
								"computed": false,
								"new":      "x-auth-token",
								"old":      "",
							},
							"redacted_fields.0.uri_path.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"resource_arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "1.5.0"

variables = {}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
